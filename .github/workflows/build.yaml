name: Build
on: [push, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build - Ubuntu
            short-name: lin64
            runs-on: ubuntu-latest
            compiler: clang
            cxx-compiler: clang++

          - name: Build - macOS
            short-name: mac64
            runs-on: macos-latest

          - name: Build - Windows
            short-name: win64
            runs-on: windows-latest
            cmake-args: -DCMAKE_GENERATOR_PLATFORM=x64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux'
      run: sudo apt-get install -y ninja-build

    - name: Generating project files
      run: cmake -S . -B build ${{ matrix.cmake-args }} -D BUILD_SHARED_LIBS=OFF -D CMAKE_BUILD_TYPE=MinSizeRel
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.cxx-compiler }}

    - name: Building project
      run: cmake --build build --config MinSizeRel

    - name: Upload artifacts (Windows)
      uses: actions/upload-artifact@v3
      if: runner.os == 'Windows'
      with:
        name: testwrite-${{ matrix.short-name }}
        path: |
          build/MinSizeRel/testwrite*
        retention-days: 7

    - name: Upload artifacts (Linux)
      uses: actions/upload-artifact@v3
      if: runner.os != 'Windows'
      with:
        name: testwrite-${{ matrix.short-name }}
        path: |
          build/testwrite*
        retention-days: 7
